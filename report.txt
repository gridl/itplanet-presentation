--------------------------------------------------------------------------------
1 слайд

Тема моего диплома: "Разработка виртуальной инфраструктуры для реализации облачных услуг" напрямую не связана со свободным ПО.
Мой доклад будет об использовании свободного программного обеспечения в этой инфраструктуре.

--------------------------------------------------------------------------------
2 слайд

Вкратце о сути моего диплома.
В ходе диплома необходимо было разработать инфраструктуру, которая могла бы предоставлять услуги хостинга сайтов, а также предоставление аренды виртуальных выделенных серверов для клиентов.

Основные требования которые я поставил перед собой перед началом проектирования:
- лишиться единых точек отказа по максимуму где это возможно, это в первую очередь резервные каналы связи, использование RAID-массивов, подчиненные DNS-сервера
- защищаться нужно обязательно и об этом нужно думать заранее, в первую очередь это доступ к серверам, он должен быть только у уполномоченных лиц, также нужно следить за исправлением критических уязвимостей в используемом программном обеспечении
- самое наболевшее - это DDoS-атаки, как небольшие flood-атаки, так и крупные заказные атаки, при котором забиваются гигабитные каналы
- необходимо использование свободного ПО из-за ограниченности бюджета
- на ранних этапах проектирования необходимо предусмотреть документирование и автоматизацию инфраструктуры, так как при разрастании инфраструктуры обслуживать ее будет все сложнее, а документирование всех действий и автоматизация очень облегчает этот процесс
- на основе собранных конфигураций серверов необходим примерный расчет, сколько клиентов можно разместить на одном сервере, какие цены на услуги должны быть чтобы это окупалось
- и использование в бизнесе, это уже по большей части к менеджеру, а не к администратору

--------------------------------------------------------------------------------
3 слайд

В ходе разработки инфраструктуры была составлена общая схема инфраструктуры, которая представлена на слайде.
Большая часть оборудования была размещена в одном из московских Tier-3 дата-центров, сервера для дочерних DNS-серверов и серверов мониторинга были размещены в другом дата-центре, также в Москве.

Сетевой канал 1Gb/s.
В качестве аппаратной части использовались блейд-сервера на основе Supermicro, типовых конфигураций с оперативной памятью от 48 до 96GB.
Для высокой скорости работы дисковой подсистемы использованы SSD-диски, объединенные в массив RAID-10, на серверах бекапов SATA-диски объединенные в RAID-10, каждый диск размером 4TB.
Выделенные сервера клиентов арендовались у дата-центра, мы предоставляли установку операционной системы на сервер, услугу администрирования сервера и подключения к нашему мониторингу.
Резервные сетевые патчкорды были подключены к отдельному коммутатору того же дата-центра, это максимально возможное резервирование, так как свою автономную сеть мы позволить не можем.

--------------------------------------------------------------------------------
4 слайд

Для инфраструктуры была выбрана операционная система Linux, а именно дистрибутив CentOS 7.
Необходимое программное обеспечение, которое нужно будет в инфраструктуре доступно из репозиториев этого дистрибутива.
Дистрибутив вышел в 2014 году, поэтому полная поддержка пакетной базы продлится до 2020 года, а устранение критических уязвимостей до 2024 года.
CentOS является открытым проектом, который основан на коммерческом дистрибутиве Red Hat Enterprise Linux 7, и совместим с ним, поэтому документации в сети достаточно.
Ну и самое главное, у меня был опыт работы с этим дистрибутивом и он мне нравится.

--------------------------------------------------------------------------------
5 слайд

Когда заходит речь о событийном мониторинге Linux-систем, то первое что вспомнят опытные системные администраторы это Nagios и Zabbix.
Кстати Nagios может мониторить не только Linux-системы, сюда также входят Windows-хосты, коммутаторы, маршрутизаторы и все остальное, что можно мониторить с помощью SNMP.
Уведомления о проблемах в инфраструктуры доступны в веб-браузере, по почте и SMS.
В ходе эксплуатации Nagios были замечены некоторые досадные баги с утечками памяти, очередями проверок и прочими мелкими неудобствами.

*** переключение слайда ***

В ходе поисков решений этих проблем было решено мигрировать на Icinga2, который является ответвлением (форком) Nagios.
В нем исправлено много проблем и добавлены новые особенности, такие как переработанный пользовательский интерфейс, расширена документация.
А самое главное, что все скрипты мониторинга, которые работали в Nagios так же работали и в Icinga2, то есть они сохранили обратную совместимость.
Наглядный пример преимущества свободного ПО, можно сделать ответвление (форкнуть) открытый проект и доделывать его.

--------------------------------------------------------------------------------
6 слайд

Для построения графиков использовался Munin, который отлично справляется со своей задачей.
Графики нужны для анализа нагрузки на сервера, исследования аномальных ситуаций и анализа работы серверов и сервисов.
Преимущества Munin в большом количестве плагинов, а также в простоте написания своих плагинов, можно писать на любом понравившемся скриптовом языке.

--------------------------------------------------------------------------------
7 слайд

Представим себе ситуацию, что необходимо внести изменение на сервере, например отредактировать конфигурационный файл какой-нибудь службы и перезапустить сервис.
Если сервер у нас один, то это займет не больше одной минуты.
А если у нас 5 серверов? 50? 500? И на всех серверах необходимо сделать одно и то же изменение?
В этом нам поможет Ansible, который позволяет централизованно управлять серверами, вносить изменения в файлы, перезапускать сервисы и многое другое.
Я еще полностью не ощутил мощь этого инструмента, но определенно это самая лучшая программа, которую я изучал (и изучаю до сих пор) за последний год.
Преимущества использования Ansible по сравнению с аналогами Puppet/Chef/SaltStack - это относительно низкий порог входа, отсутствие тяжелых зависимостей, все что нужно это запущенная служба SSH.
Написание сценариев (их называют playbook'ами) очень простое и наглядное, для этого используется синтаксис YAML.
Поэтому все playbook'и очень похожи на простые bash-скрипты.

--------------------------------------------------------------------------------
8 слайд

Для создания легковесных контейнеров использовалась технология OpenVZ, которая позволяет на одном физическом сервере создавать множество виртуальных серверов, у каждого такого сервера есть свой ip-адрес, своя операционная система, установленные приложения, управляются они так же как и физический сервер.
Единственный минус технологии, обусловленный его архитектурой, в таком контейнере можно запускать только Linux-дистрибутивы.
Но зато скорость работы таких контейнеров практически не отличается от работы реального физического сервера.

*** переключение слайда ***

Для клиентов, которые хотят устанавливать в свои виртуальные серверы Windows или FreeBSD например, необходимо использование технологии полной (аппаратной) виртуализации.
Тут безусловно KVM очевидный кандидат для этих целей.
Виртуальные машины KVM не настолько быстрые как контейнеры на OpenVZ, но зато обеспечивают эмуляцию своего оборудования и изменение гостевой ОС как это вздумается клиенту.

--------------------------------------------------------------------------------
9 слайд

Что касается Shared-хостинга, тут все тот же стандартный стек Linux, Apache, MySQL, PHP, однако MySQL в нашем случае заменен на форк Percona, который является более производительным.
Также для обработки статического контента на веб-серверах и проксирования запросов на бэкенд используется Nginx.
Помимо размещения сайтов на shared-хостинга возможно создание своих почтовых ящиков, поэтому тут используется классический стек ПО: exim и dovecot занимаются отправкой и приемом почты, spamassasin фильтрует спам, а roundcube позволяет в веб-браузере работать с почтой.

--------------------------------------------------------------------------------
10 слайд

Утилита rsync очень простая, ее задача скопировать файлы из одного места в другое.
Для этого использовались самописные bash-скрипты резервного копирования и восстановления.

Сервер shared-хостинга занимал больше всего места на сервере бекапа, так как необходимо было бекапить не только системные настройки, но также и все файлы пользователей и базы данных.
Для резервного копирования использовалась дифференциальная схема, то есть все файлы, которые были изменены с прошлой резервной копии, копируются заново.
Такая схема оптимальна, так как зачастую изменение в файлах сайтов не происходит, в отличие от баз данных.

Для резервирования баз данных, перед каждой сессией резервного копирования снимается полный дамп БД, в соответствии с заданием планировщика.
В отличие от дифференциальной схемы для файлов сервера, для дампов баз использовалась схема полного резервного копирования.

На серверах виртуализации клиентские контейнеры и виртуальные машины не бекапятся, бекапятся только системные конфигурации.

Конфигурации файлов зон DNS-серверов, базы данных биллинга также бекапилась с применением схемы полного резервного копирования.

--------------------------------------------------------------------------------
11 слайд

Уязвимости в движках клиентских сайтов позволяют злоумышленникам получать ограниченные доступы к серверу, чаще всего это подмена сайта, рассылка спама, размещение фишинговых страниц, внедрение вредоносного javascript-кода, кража базы данных клиентских счетов.
Если же неосторожный клиент для своего виртуального сервера подобрал слабый пароль, то все его данные могут зашифровать, а в обмен на ключ для расшифрования  потребовать перевести некоторую сумму денег на счет bitcoin.
Я с такими клиентами сталкивался не один раз

Maldet позволяет по известным сигнатурам обнаруживать вредоносные файлы, перемещать в карантин для ручного исследования зараженных файлов, и даже в некоторых случаях лечить автоматически.
Сканирование файлов запускается ночью, когда нагрузка на серверах минимальная.
По окончании сканирования, на email администратора присылается отчет об обнаруженных вредоносных файлов.
Далее администратор принимает решение, блокировать ли нарушителя, или же только уведомить о заражении.

--------------------------------------------------------------------------------
12 слайд

Защита сети от несанкционированного доступа обеспечивается в первую очередь правильно настроенным фаерволом (IPTables), а также мониторингом наиболее активных соединений к серверу, в этом могут помочь fail2ban и ipset.
На слайде изображена схема того, как проходит пакет по фаерволу netfilter, механизм которого встроен в ядро Linux с версии 2.4.
Схема довольно сложная, поэтому при грамотной настройке netfilter и системных настроек стека TCP/IP возможно блокирование атак вплоть до 100Mb/s.

ddos-deflate позволяет блокировать на определенное время адреса с большим количеством подключений и уведомлять администратора по почте об этом.

--------------------------------------------------------------------------------
13 слайд

Mantis - программное обеспечение для отслеживания ошибок в программных продуктах (так называемый багтрекер).
Использование Mantis в инфраструктуре для системного администратора ограничивается в основном как система учета заявок (HelpDesk).
Можно наблюдать текущие и закрытые задачи, решаются ли эти задачи и каков их статус.
Хотя можно его использовать и по прямому назначению, например когда пишешь большой скрипт.

Система очень удобна для использования, имеет интеграцию с DokuWiki, не имеет кучу тяжелых зависимостей, работает на PHP и MySQL.
Проста в адмнистрировани и имеет высокую скорость работы.
Также для Mantis доступно достаточное количество разнообразных плагинов, расширяющий функционал системы.

--------------------------------------------------------------------------------
14 слайд

Клиенты арендующие виртуальные сервера, как правило, не очень хорошо администрируют сервер из консоли, поэтому для этого им удобно пользоваться панелью управления.
Одна из таких - это Vesta, она обладает широким функционалом, простым интерфейсом и бесплатна для клиентов.
Она проста в установке, поэтому ее легко интегрировать в скрипты развертывания окружений контейнеров.
Приятно что ведется активная разработка панели, особенно радует стек предустановленного программного обеспечения, мультиязычный интерфейс, и очень мощные средства управления через консоль.

--------------------------------------------------------------------------------
15 слайд

В данной таблице можно увидеть используемые Open Source инструменты и их закрытые аналоги с указанием цен на использование.
Довольно внушительные цены.

--------------------------------------------------------------------------------
16 слайд

Представим себе небольшую инфраструктуру с 10-ю shared-хостинг серверами, 10-ю серверами Virtuozzo и 10-ю vCenter Server.
Всего в команде 25 человек.
На одном shared-хостинге размещено примерно 2000 сайтов.

Стоимость лицензий и сторонней поддержки программного обеспечения для такой инфраструктуры будет стоит примерно 265 000 долларов в год.
И это без учета зарплаты.

--------------------------------------------------------------------------------
17 слайд

Было проделано много работы, прочитано море документации, набито десятки шишек, некоторые проекты, скрипты, руководства я выложил в Open Source.

В частности руководство по администрированию OpenVZ, руководство по администрированию новой версии Virtuozzo 7.

Оригинальный скрипт ddos-deflate который я нашел на сайте автора в интернете с недавних пор недоступен, очень вовремя я его форкнул и доделал под себя.

Один из плейбуков по развертыванию окружения для wordpress в virtuozzo-контейнере я также выложил в открытый доступ.

На том же гитхабе есть репозиторий с некоторыми моими скриптами для мониторинга.

Ну и сам диплом тоже есть в открытом доступе, я его писал с помощью LaTeX, поэтому кому-то он еще пригодится в качестве шаблона для своего диплома.
По своему опыту скажу, что писать диплом в LaTeX при должном умении гораздо удобнее, чем в LibreOffice или Microsoft Word.

--------------------------------------------------------------------------------
